# ApartmentHunting

Approach :
1)I need to find optimal location index. 

2)So I need to calculate the distances at each node.

3)For this to happen I need to loop over each node to caluculate the distances.
4)If the requirement is pressent at the node then I have to return the distance between two nodes.
    a)But the distance for requirement can be satisfied multiple nodes.
        i)If it is at the same node the distance is zero.
        ii)if it is at multiple other nodes then we have find the closest distance that has to be travelled to meet requirement.
        iii)As the reuquirement can be staisfoed at multiple node we have to keep track of minmum distance to do this I           
            can use Math.min function to update closest distance.
        iv)So I've intialized the closest distance to maximum possible value as distance. So if the node with lesser distance
           meets requirement we will update the closest  distacnce to that value.

    b)To check the distance I have to keep one index at current node and other at the requirement satisfied node.
    c) so I have to do two loops to get the distance and one loop to check each requirement.
    d) This approach may take much time for execution but code will be shoter.
    So for given example distances for each requirements (gym,school,store respectively are)
    at node 1(1,0,4),node 2(0,1,3),node 3(0,0,2),node 4(2,0,0)
    These are closest distances for each requirement

6)So If I stay at node 1 I have school in same block and gym in block 2 ,but I have travel four block to travel to store.

7)I don't have to store all these values as I only need maximun disatnce at each node required in order to find out what is 
  optimal node.

8) To do this I'm updating maximum distance one need to travel at each node with maximum values which are 0 that I've initialized
   using array.map function and closest distance of any requirement at that node.So for node 1 it will be 4 from the array and I will replace that value in array using index.

9)So finally as we have maximum distances ,we now have to find the all the ideal nodes that can have least possible distacnes.

10)This can  happen at multiple number of nodes as array.indexOf() only returns first possible location and array.lastIndexOf 
   return only last I've written one more loop to find all possible locations. 